plugins {
	id 'java'
	id 'groovy'
	id 'idea'
	id 'maven'
	id 'com.gradle.plugin-publish' version '0.9.4'
}

ext {
	inceptionYear = '2016'
	url = 'https://github.com/TheTemportalist/AutomataGradlePlugin'
}

if (project.hasProperty("tempGradle.publish.key")) {
	println "Found gradle publish key"
	project.ext['gradle.publish.key'] = project.property("tempGradle.publish.key")

}
if (project.hasProperty("tempGradle.publish.secret")) {
	println "Found gradle publish secret"
	project.ext['gradle.publish.secret'] = project.property("tempGradle.publish.secret")
}

println project.hasProperty("gradle.publish.key")

def getVersion() {
	def v = "0.0.1"
	if (project.hasProperty("MANUAL"))
		v += "m${MANUAL}"
	else if (project.hasProperty("BUILD_NUMBER"))
		v += ".${BUILD_NUMBER}"
	return v
}

version = getVersion()
group = 'temportalist'
description = 'Gradle plugin for Minecraft ForgeGradle to make build scripts lighter and add more configurability to mods'
archivesBaseName = 'AutomataGradle'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
	jcenter()
	mavenCentral()
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		///*
		maven {
			name "forge"
			url "http://files.minecraftforge.net/maven"
		}
		//*/
		/*
		maven {
			name "sonatype-snapshots"
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		//*/
	}
}

dependencies {
	compile gradleApi()
	compile localGroovy()

	// Gradle Portal (def works)
	// compile 'gradle.plugin.net.minecraftforge.gradle:ForgeGradle:2.0.2'
	// Testing snapshot
	compile group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '2.2-SNAPSHOT'

	// CurseForge Gradle cursegradle
	compile group: 'gradle.plugin.com.matthewprenger', name: 'CurseGradle', version: '1.0.7'

}

idea {
	module {
		// if you hate browsing Javadoc
		downloadJavadoc = false
		// and love reading sources :)
		downloadSources = true
	}
}

jar.manifest.mainAttributes([
		'Implementation-Title'  : project.name,
		'Implementation-Version': project.version
])

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
	classifier = 'javadoc'
}

assemble.dependsOn javadocJar, sourcesJar

[compileJava, compileGroovy].each {
	it.options.encoding = 'UTF-8'
	it.options.deprecation = true
	it.options.fork = true
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

pluginBundle {
	website = project.url
	vcsUrl = 'git://github.com/TheTemportalist/AutomataGradlePlugin.git'
	plugins {
		automataGradlePlugin {
			id = 'temportalist.automata'
			description = project.description
			displayName = 'Automata Gradle Plugin'
			version = getVersion()
			tags = ['minecraft', 'forgegradle']
		}
	}
}
